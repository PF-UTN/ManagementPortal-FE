name: Deploy Angular to Vercel

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  push:
    tags:
      - "v*"

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: Production

    steps:
      - uses: actions/checkout@v2

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      
      - name: Deploy Project Artifacts to Vercel
        id: vercel_deploy
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}


      - name: Get the latest release information
        id: get_release
        run: |
          VERSION=$(git describe --tags --abbrev=0)
          RELEASE_ID=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
          "https://api.github.com/repos/${{ github.repository }}/releases/tags/$VERSION" | jq -r '.id')
          echo "RELEASE_ID=$RELEASE_ID" >> $GITHUB_ENV

      - name: Update release with new message
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Set the new release message
          PREVIEW_URL="https://${{ steps.vercel_deploy.outputs.preview_url }}"
          VERSION=$(git describe --tags --abbrev=0)
          MESSAGE="The production version is now deployed at [${PREVIEW_URL}](${PREVIEW_URL})"

          # Update the release message
          curl -X PATCH -H "Authorization: token $GITHUB_TOKEN" \
          -d @- https://api.github.com/repos/${{ github.repository }}/releases/$RELEASE_ID \
          <<EOF
          {
            "body": "$MESSAGE"
          }
          EOF